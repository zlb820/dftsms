问题记录时间：2017年4月29日12:21:30
问题级别：严重
问题记录：java.sql.SQLException: Lock wait timeout exceeded; try restarting transaction
问题原因：删除操作没有放到事务中，也就是没有手动开启和提交事务。详见org.common.RBAC.dao.impl.TestBaseDaoImpl_deleteByID.testDel_coIDAndEntity()方法
疑问：
	在写测试的时候，如果不将deleteByID方法放到事务中(也就是开启事务和提交)，就会卡顿一直到超时出现下面异常；
	如果放入到事务中，确实将数据库中的数据清除了，但是如果你在同一个测试方法中仍然还可以查询出来。
测试用例设计：
	导入测试数据 ——> 删除其中一个数据 ——> 查询该数据 ——> 正常情况：应该查不到，报IdNotExistException。
注意：实际操作结果是数据库中删除了数据，但是测试用例仍然测试失败（删除的数据仍然可以正确获得）。
-----------------------------------控制台异常记录-----------------------------------
java.sql.SQLException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4190)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4122)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2570)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2731)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2812)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2761)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:894)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:732)
	at org.dbunit.database.statement.SimpleStatement.executeBatch(SimpleStatement.java:69)
	at org.dbunit.operation.DeleteAllOperation.execute(DeleteAllOperation.java:126)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:79)
	at org.common.test.util.DBUnit_Util.resume(DBUnit_Util.java:129)
	at org.common.test.util.AbstranctDbUnit.tearDown(AbstranctDbUnit.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
四月 29, 2017 11:47:37 上午 org.springframework.test.context.transaction.TransactionContext endTransaction
信息: Rolled back transaction for test context [DefaultTestContext@3e521715 testClass = TestBaseDaoImpl_deleteByID, testInstance = org.common.RBAC.dao.impl.TestBaseDaoImpl_deleteByID@26a529dc, testMethod = testDel_coIDAndEntity@TestBaseDaoImpl_deleteByID, testException = java.lang.AssertionError: Expected exception: org.common.RBAC.dao.exception.IdNotExistException, mergedContextConfiguration = [MergedContextConfiguration@79c5636f testClass = TestBaseDaoImpl_deleteByID, locations = '{classpath:daoContext.xml, classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].


问题原因及解决方法参见：《DBUnit与Spring_Test造成的数据库死锁》
